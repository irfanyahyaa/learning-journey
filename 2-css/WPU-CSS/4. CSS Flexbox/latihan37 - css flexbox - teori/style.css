.container {
    width: 600px;
    height: 400px;
    border: 5px solid #333;
    margin: 30px auto;
    padding: 10px;
    box-sizing: border-box;

    /* dengan memberi display flex, child nya akan berperilaku flex juga */
    display: flex;
    
    /* "flex-direction" mengatur arah dan urutan items dalam container, memiliki 4 value yaitu "row", "row-reverse", "column", "column-reverse" */
    flex-direction: row;
    
    /* "flex-wrap" berguna untuk memindahkan items di dalam container apabila items melebihi besar container (memaksa untuk tetap berada dalam 1 baris, coba apply "no-wrap"), value defaultnya "no-wrap", value lain yaitu "wrap", dan "wrap-reverse" */
    flex-wrap: wrap;

    /* justify-content mengatur kesejararan antar element yang ada di dalam flex box secara horizontal, memiliki 6 value yaitu "flex-start", "flex-end", "center", "space-between", "space-around", dan "space-evenly" */
    justify-content: flex-start;

    /* align-items mengatur kesejararan antar element yang ada di dalam flex box secara vertikal, memiliki 5 value yaitu "flex-start", "flex-end", "center", "strech" dan "baseline" */
    align-items: flex-end;

    /* berfungsi sama seperti "align-items", tetapi dapat bekerja apabila items yang ada di dalam "container" lebih dari satu baris */
    align-content: flex-start;
}

.container div {
    width: 120px;
    height: 120px;
    background-color:rgb(113, 113, 245);
    margin: 2px;
    /* berguna untuk mengatur besar div nya apabila tidak di definisikan per item. maka, item nya akan terbagi sama besar memenuhi container */
    flex-grow: 1;
}


.c2 {
    justify-content: center;
    align-items: center;
}

/* dua element akan berada di ujung kiri dan kanan, element sisanya akan berada di tengah dengan pembagian jarak yang sama */
.c3 {
    justify-content: space-between;
    /* akan berfungsi ketika item didalam "container" nya tidak memiliki nilai "height" */
    align-items: stretch;
}

.c4 {
    justify-content: space-around;
    /* mengatur rata tengahnya berdasarkan tulisan yang ada didalamnya (di dalam "container"), akan terlihat jelas ketika  nilai "font-size" setiap item berbeda */
    align-items: baseline;
}

.c5 {
    justify-content: space-evenly;
}

/* property yang ada di dalam items */
/* property order berguna untuk mengubah urutan items yang ada di dalam container */
.satu { order: 2; }
.dua { order: 3; }
.container div .c2 .tiga { 
    order: 1;
    /* align-self berguna untuk mengatur kesejajaran secara vertikal, per item nya */
    align-self: flex-end;
}